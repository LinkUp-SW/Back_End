openapi: 3.0.0
info:
  title: Linkup API Docs
  version: 1.0.0
  description: API for Linkup project.
  contact:
    name: Linkup Team
servers:
  - url: http://localhost:3000
    description: Development server
paths:
  /auth/google:
    get:
      tags:
        - Google Auth
      summary: Initiates Google authentication
      description: Redirects the user to Google to initiate OAuth2 authentication.
      responses:
        '302':
          description: Redirects to Google for authentication.
  /api/v1/auth/logout:
    get:
      tags:
        - Google Auth
      summary: Logs the user out
      description: Revokes Google tokens if applicable and destroys the session.
      responses:
        '302':
          description: Redirects to the login page after logging out.
  /api/v1/user/login:
    post:
      tags:
        - Auth
      summary: Logs in a user
      description: >
        Authenticates a user using email and password. 
        On successful authentication, sets a JWT cookie.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - password
              properties:
                email:
                  type: string
                  example: "user@example.com"
                password:
                  type: string
                  example: "valid_password"
      responses:
        '200':
          description: Login successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Login successful"
        '400':
          description: Email and password are required
        '401':
          description: Invalid credentials
  /api/v1/user/logout:
    get:
      tags:
        - Auth
      summary: Logs out a user
      description: >
        Clears the JWT cookie to log out the user.
      responses:
        '200':
          description: Logout successful
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Logout successful"
  /api/v1/user/send-otp:
    post:
      tags:
        - OTP
      summary: Generate and send OTP
      description: >
        Generates a one-time password (OTP) and sends it to the user's email (and optionally via SMS).
        The OTP is stored in the session and expires in 10 minutes.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
              properties:
                email:
                  type: string
                  example: "test@example.com"
                phone:
                  type: string
                  example: "1234567890"
      responses:
        '200':
          description: OTP has been sent to your email.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP has been sent to your email"
        '400':
          description: Email is required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email is required"
        '500':
          description: Server error.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Server error"
  /api/v1/user/verify-otp:
    post:
      tags:
        - OTP
      summary: Verify OTP
      description: >
        Verifies the one-time password (OTP) provided by the user. Requires email and OTP.
        If the OTP is valid and not expired, the session values are cleared and a success message is returned.
      requestBody:
        required: true
        content:
          application/json:
            schema:
              type: object
              required:
                - email
                - otp
              properties:
                email:
                  type: string
                  example: "test@example.com"
                otp:
                  type: string
                  example: "123456"
      responses:
        '200':
          description: OTP verified successfully.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "OTP verified successfully"
        '400':
          description: Email and OTP are required.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Email and OTP are required"
        '401':
          description: Invalid OTP or OTP expired.
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                    example: "Invalid OTP"
